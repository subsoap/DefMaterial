-- As components cannot be enumerated dynamically, you must manually make a list of meshes you want light to be updated for

local light = require("defmaterial.light_helper")

function init(self)
	self.meshes = {
		"/material_tests/single_torus#torus_cellshading",
		"/material_tests/bevel_cube#bevel_cube_cellshading",
		"/material_tests/bevel_cube2#bevel_cube_cellshading",
		
		"/material_tests/geometry#torus_lit",
		"/material_tests/geometry#torus_cellshading",
		"/material_tests/geometry#torus_cellshading_lit",
		"/material_tests/char#char_lit_pixel",
		"/material_tests/char#char_cellshading_pixel",
		
		"/material_tests/torus_phong#torus_phong",
		"/material_tests/torus_phong1#torus_phong"
		
	}
	self.position = vmath.vector4(1,1,1,1)
	
	self.timer = 0
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	for _, mesh in ipairs(self.meshes) do
		self.position.x = light.position.x
		self.position.y = light.position.y
		self.position.z = light.position.z
		go.set(mesh,"light",self.position)
	end
	
	self.timer = self.timer + dt
	light.position.y = math.cos(self.timer * 0.2) * 10
	light.position.x = math.sin(self.timer * 0.2) * 10
	light.position.z = math.tan(self.timer * 0.5)
	go.set_position(light.position, "/material_tests/_light_debugger")
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
